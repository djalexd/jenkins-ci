<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>job_base_name</name>
          <description>Base name of this job, e.g. project name</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>git_scm_url</name>
          <description>Git SCM URL of this job</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <javaposse.jobdsl.plugin.ExecuteDslScripts plugin="job-dsl@1.35">
      <scriptText>def guessProjectName(gitUrl) {
  def index1 = gitUrl.indexOf(&quot;github.com&quot;)
  if (index1 &lt; 0) {
    throw new IllegalArgumentException(gitUrl + &quot; not recognized&quot;);
  } else {
    def subString1 = gitUrl.substring(index1 + &quot;github.com&quot;.length() + 1);
    subString1.substring(0, subString1.length() - 4);
  }
}

def project = guessProjectName(&quot;${git_scm_url}&quot;)
def branchApi = new URL(&quot;https://api.github.com/repos/${project}/branches&quot;)
def branches = new groovy.json.JsonSlurper().parse(branchApi.newReader())
branches.each {
    def branchName = it.name
    def jobName = &quot;${job_base_name} - Unit Tests - ${branchName}&quot;.replaceAll(&apos;/&apos;,&apos;-&apos;)
    job(jobName) {

        label(&quot;swarm&quot;)

        scm {
          
          git {
            
            remote {
              url &quot;${git_scm_url}&quot;
            }

            branch branchName
            
            createTag false
            clean true
            
          }
        }
        triggers {
          scm(&apos;*/5 * * * *&apos;)
        }
        steps {
            maven(&quot;clean test&quot;)
        }
    }
}</scriptText>
      <usingScriptText>true</usingScriptText>
      <ignoreExisting>true</ignoreExisting>
      <removedJobAction>DISABLE</removedJobAction>
      <removedViewAction>DELETE</removedViewAction>
      <lookupStrategy>JENKINS_ROOT</lookupStrategy>
      <additionalClasspath></additionalClasspath>
    </javaposse.jobdsl.plugin.ExecuteDslScripts>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>